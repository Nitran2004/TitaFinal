@model List<ProyectoIdentity.Models.Producto>
@{
    ViewData["Title"] = "Menú Personalizable";
}

<style>
    /* --------- Menú de Categorías --------- */
    .category-nav {
        position: sticky;
        top: 0;
        background: #fff;
        padding: 8px 0;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
        z-index: 100;
    }

    .category-container {
        display: flex;
        overflow-x: auto;
        gap: 16px;
        padding: 0 24px;
        scroll-behavior: smooth;
        justify-content: center;
        margin: 0 auto;
        max-width: 900px; 
    }
    .category-container::-webkit-scrollbar { height:6px; }
    .category-container::-webkit-scrollbar-thumb { background: rgba(0,0,0,0.2); border-radius:3px; }
    
    .category-btn {
        flex:0 0 auto; display:flex; flex-direction:column; align-items:center;
        border:none; background:transparent; cursor:pointer;
        padding:6px 12px; transition:color .2s,transform .2s; color:#555;
        text-decoration: none !important;
    }
    .category-btn i { font-size:1.4rem; margin-bottom:4px; transition:transform .2s; }
    .category-btn span { font-size:.85rem; white-space:nowrap; }
    .category-btn.active,
    .category-btn:hover { color:#28a745; transform:translateY(-3px); text-decoration: none !important; }
    .category-btn.active i,
    .category-btn:hover i { transform:scale(1.2); }
    .category-btn.active::after {
        content:''; display:block; width:100%; height:3px;
        background:linear-gradient(90deg,#ffc107,#28a745);
        border-radius:2px; margin-top:6px; animation:indicator-in .3s ease-out;
    }
    @@keyframes indicator-in { from{width:0} to{width:100%} }
    @@media(max-width:576px){ .category-btn i{font-size:1.2rem} .category-btn span{font-size:.75rem} }

    /* --------- Grid de Productos --------- */
    .product-grid {
        display:grid;
        grid-template-columns:repeat(auto-fill,minmax(260px,1fr));
        gap:24px;
        margin:24px 0;
    }
    .product-card {
        background:#fff; border-radius:12px; overflow:hidden;
        box-shadow:0 4px 12px rgba(0,0,0,0.08);
        transition:transform .3s,box-shadow .3s; position:relative;
        height: 100%;
    }
    .product-card:hover { transform:translateY(-5px); box-shadow:0 8px 24px rgba(0,0,0,0.1); }
    .product-card img {
        width:100%; height:180px; object-fit:cover;
    }
    .card-body {
        padding:16px; text-align:center; display: flex; flex-direction: column; height: calc(100% - 180px);
    }
    .product-name {
        font-size:1.15rem; font-weight:600; color:#212529; margin:8px 0 4px;
    }
    .product-price {
        font-size:1rem; font-weight:700; color:#e83e8c; margin-bottom:8px;
    }
    .product-description {
        font-size:0.9rem; color:#6c757d; margin-bottom:12px; flex-grow: 1;
    }
    
    /* Estilos para los botones */
    .btn-info {
        background-color: #17a2b8;
        color: white;
        border: none;
        border-radius: 6px;
        padding: 8px 12px;
        font-size: 0.85rem;
        transition: all 0.2s;
        display: inline-block;
        width: 100%;
        margin-bottom: 8px;
        text-decoration: none !important;
    }

    .btn-info:hover {
        background-color: #138496;
        color: white;
        transform: translateY(-2px);
        text-decoration: none !important;
    }

    .btn-warning {
        background-color: #F2A900;
        border-color: #F2A900;
        color: #fff;
        border: none;
        border-radius: 6px;
        padding: 8px 12px;
        font-size: 0.9rem;
        transition: all 0.2s;
        display: inline-block;
        width: 100%;
        text-decoration: none !important;
    }

    .btn-warning:hover {
        background-color: #e09600;
        border-color: #d48e00;
        color: #fff;
        transform: translateY(-2px);
        text-decoration: none !important;
    }

    .btn-warning i, .btn-info i {
        margin-right: 5px;
    }
</style>

<h1 class="text-center mt-4">@(string.IsNullOrEmpty(ViewBag.CategoriaActual) || ViewBag.CategoriaActual.ToLower() == "todas" ? "Menú Personalizable" : $"{ViewBag.CategoriaActual} - Personalizable")</h1>

<nav class="category-nav">
    <div class="category-container">
        <button class="category-btn @(ViewBag.CategoriaActual?.ToLower() == "todas" ? "active" : "")" data-category="todas">
            <i class="fas fa-layer-group"></i>
            <span>Todas</span>
        </button>
        @if (ViewBag.Categorias != null)
        {
            @foreach (var cat in ViewBag.Categorias)
            {
                <button class="category-btn @(ViewBag.CategoriaActual?.ToLower() == cat.ToLower() ? "active" : "")" data-category="@cat.ToLower()">
                    <i class="@GetCategoryIcon(cat)"></i>
                    <span>@cat</span>
                </button>
            }
        }
    </div>
</nav>

<div class="container">
    <div class="product-grid">
        @foreach (var producto in Model)
        {
            <div class="product-card" data-categoria="@producto.Categoria.ToLower()">
                @if (producto.Imagen != null)
                {
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(producto.Imagen)"
                         alt="@producto.Nombre" />
                }
                else
                {
                    <img src="https://via.placeholder.com/260x180/f8f9fa/6c757d?text=Sin+Imagen"
                         alt="@producto.Nombre" />
                }
                <div class="card-body">
                    <div class="product-name">@producto.Nombre</div>
                    <div class="product-price">$@producto.Precio.ToString("F2")</div>
                    <p class="product-description">@producto.Descripcion</p>
                    
                    <div class="mt-auto">
                        <a href="@Url.Action("IniciarPersonalizacion", new { id = producto.Id })"
                           class="btn btn-warning">
                            <i class="fas fa-shopping-bag"></i> Seleccionar
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const cards = document.querySelectorAll('.product-card');
        
        // Funcionalidad de filtrado por categorías
        document.querySelectorAll('.category-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                // Remover clase active de todos los botones
                document.querySelectorAll('.category-btn').forEach(b => b.classList.remove('active'));
                // Agregar clase active al botón clickeado
                this.classList.add('active');
                
                const cat = this.dataset.category;
                
                // Actualizar la URL con el parámetro de categoría
                const url = new URL(window.location.href);
                if (cat === 'todas') {
                    url.searchParams.delete('categoria');
                } else {
                    url.searchParams.set('categoria', cat);
                }
                history.pushState({}, '', url);
                
                // Filtrar productos
                cards.forEach(c => {
                    c.style.display = (cat === 'todas' || c.dataset.categoria === cat) ? 'block' : 'none';
                });
            });
        });

        // Comprobar si hay una categoría seleccionada en localStorage
        const storedCategory = localStorage.getItem('selectedCategory');
        if (storedCategory) {
            const categoryBtn = document.querySelector(`.category-btn[data-category="${storedCategory}"]`);
            if (categoryBtn) {
                categoryBtn.click();
            }
            // Limpiar después de usar
            localStorage.removeItem('selectedCategory');
        }

        // Verificar parámetro de URL al cargar la página
        const urlParams = new URLSearchParams(window.location.search);
        const currentCategory = urlParams.get('categoria');
        if (currentCategory) {
            const categoryBtn = document.querySelector(`.category-btn[data-category="${currentCategory.toLowerCase()}"]`);
            if (categoryBtn) {
                categoryBtn.click();
            }
        }
    });
</script>
}

@functions {
    public string GetCategoryIcon(string category)
    {
        return category.ToLower() switch
        {
            "pizza" => "fas fa-pizza-slice",
            "cerveza" => "fas fa-beer",
            "cocteles" => "fas fa-cocktail",
            "bebidas" => "fas fa-glass-whiskey",
            "promo" => "fas fa-percentage",
            "sánduches" or "sanduches" => "fas fa-hamburger",
            "shot" => "fas fa-wine-glass-alt",
            "picadas" => "fas fa-cheese",
            _ => "fas fa-tag"
        };
    }
}