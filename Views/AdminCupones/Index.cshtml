@model IEnumerable<ProyectoIdentity.Models.Cupon>
@{
    ViewData["Title"] = "Administrar Cupones";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-ticket-alt"></i> Administrar Cupones</h2>
        <a href="@Url.Action("Crear", "AdminCupones")" class="btn btn-success">
            <i class="fas fa-plus"></i> Crear Nuevo Cupón
        </a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>Descripción</th>
                            <th>Tipo</th>
                            <th>Valor</th>
                            <th>Válido Hasta</th>
                            <th>Días Aplicables</th>
                            <th>Activo</th>
                            <th>Puntos</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cupon in Model)
                        {
                            <tr>
                                <td>@cupon.Id</td>
                                <td>
                                    <strong>@cupon.Nombre</strong>
                                    <br><small class="text-muted">@cupon.CodigoQR</small>
                                </td>
                                <td>
                                    <span class="text-truncate" style="max-width: 200px; display: inline-block;" title="@cupon.Descripcion">
                                        @cupon.Descripcion
                                    </span>
                                </td>
                                <td>
                                    @if (cupon.TipoDescuento == "3x2")
                                    {
                                        <span class="badge bg-warning">3x2</span>
                                    }
                                    else if (cupon.TipoDescuento == "Porcentaje")
                                    {
                                        <span class="badge bg-success">@cupon.ValorDescuento%</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-primary">$@cupon.ValorDescuento</span>
                                    }
                                </td>
                                <td class="text-center">
                                    @if (cupon.TipoDescuento != "3x2")
                                    {
                                        @cupon.ValorDescuento
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <span id="fecha-display-@cupon.Id" class="me-2">
                                            @(cupon.FechaExpiracion?.ToString("dd/MM/yyyy") ?? "Sin límite")
                                        </span>
                                        <button class="btn btn-sm btn-outline-primary" onclick="editarFecha(@cupon.Id)" title="Editar fecha">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    </div>
                                    <div id="fecha-editor-@cupon.Id" style="display: none;" class="mt-2">
                                        <div class="input-group input-group-sm">
                                            <input type="date" class="form-control" id="nueva-fecha-@cupon.Id"
                                                   value="@(cupon.FechaExpiracion?.ToString("yyyy-MM-dd"))">
                                            <button class="btn btn-success btn-sm" onclick="guardarFecha(@cupon.Id)">
                                                <i class="fas fa-check"></i>
                                            </button>
                                            <button class="btn btn-secondary btn-sm" onclick="cancelarFecha(@cupon.Id)">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <small>
                                        @if (string.IsNullOrEmpty(cupon.DiasAplicables) || cupon.DiasAplicables == "Todos")
                                        {
                                            <span class="badge bg-info">Todos los días</span>
                                        }
                                        else
                                        {
                                            @foreach (var dia in cupon.DiasAplicables.Split(','))
                                            {
                                                <span class="badge bg-secondary me-1">@dia.Trim()</span>
                                            }
                                        }
                                    </small>
                                </td>
                                <td class="text-center">
                                    @if (cupon.Activo)
                                    {
                                        <span class="badge bg-success">Activo</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactivo</span>
                                    }
                                </td>
                                <td class="text-center">
                                    @if (cupon.OtorgaPuntos)
                                    {
                                        <span class="badge bg-warning text-dark">
                                            <i class="fas fa-star"></i> Sí
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-light text-dark">No</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("Editar", "AdminCupones", new { id = cupon.Id })"
                                           class="btn btn-sm btn-outline-warning" title="Editar">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button class="btn btn-sm @(cupon.Activo ? "btn-outline-danger" : "btn-outline-success")"
                                                onclick="toggleActivo(@cupon.Id, @cupon.Activo.ToString().ToLower())"
                                                title="@(cupon.Activo ? "Desactivar" : "Activar")">
                                            <i class="fas fa-@(cupon.Activo ? "ban" : "check")"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger"
                                                onclick="eliminarCupon(@cupon.Id, 'Cupón ID @cupon.Id')"
                                                title="Eliminar cupón">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal para ver detalle -->
<div class="modal fade" id="modalDetalle" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Detalle del Cupón</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalDetalleBody">
                <!-- Contenido cargado dinámicamente -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editarFecha(cuponId) {
            document.getElementById('fecha-display-' + cuponId).style.display = 'none';
            document.getElementById('fecha-editor-' + cuponId).style.display = 'block';
        }

        function cancelarFecha(cuponId) {
            document.getElementById('fecha-display-' + cuponId).style.display = 'block';
            document.getElementById('fecha-editor-' + cuponId).style.display = 'none';
        }

        function guardarFecha(cuponId) {
            const nuevaFecha = document.getElementById('nueva-fecha-' + cuponId).value;

            if (!nuevaFecha) {
                alert('Selecciona una fecha válida');
                return;
            }

            fetch('@Url.Action("ActualizarFecha", "AdminCupones")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    cuponId: cuponId,
                    nuevaFecha: nuevaFecha
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const fechaFormateada = new Date(nuevaFecha).toLocaleDateString('es-ES');
                        document.getElementById('fecha-display-' + cuponId).textContent = fechaFormateada;
                        cancelarFecha(cuponId);
                        showAlert('Fecha actualizada correctamente', 'success');
                    } else {
                        alert('Error al actualizar la fecha: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al actualizar la fecha');
                });
        }

        function toggleActivo(cuponId, esActivo) {
            const accion = esActivo ? 'desactivar' : 'activar';

            if (!confirm(`¿Estás seguro de que deseas ${accion} este cupón?`)) {
                return;
            }

            fetch('@Url.Action("ToggleActivo", "AdminCupones")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    cuponId: cuponId,
                    activo: !esActivo
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error al actualizar el estado: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al actualizar el estado');
                });
        }

        function eliminarCupon(cuponId, nombreCupon) {
            if (!confirm(`¿Estás seguro de que deseas ELIMINAR PERMANENTEMENTE el cupón "${nombreCupon}"?\n\nEsta acción NO se puede deshacer.`)) {
                return;
            }

            fetch('@Url.Action("Eliminar", "AdminCupones")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    cuponId: cuponId
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert('Cupón eliminado correctamente', 'success');
                        setTimeout(() => {
                            location.reload();
                        }, 1000);
                    } else {
                        alert('Error al eliminar: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al eliminar el cupón');
                });
        }

        function verDetalle(cuponId) {
            fetch('@Url.Action("ObtenerDetalle", "AdminCupones")/' + cuponId)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('modalDetalleBody').innerHTML = html;
                    new bootstrap.Modal(document.getElementById('modalDetalle')).show();
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al cargar el detalle');
                });
        }

        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    `;

            const container = document.querySelector('.container');
            container.insertBefore(alertDiv, container.children[1]);

            setTimeout(() => {
                alertDiv.remove();
            }, 3000);
        }
    </script>
}

@section Styles {
    <style>
        .btn-group .btn {
            margin-right: 3px;
            padding: 6px 10px;
            font-size: 0.875rem;
        }

            .btn-group .btn i {
                font-size: 14px;
            }

        .btn-sm {
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
            line-height: 1.5;
            border-radius: 0.25rem;
        }

        .btn-outline-danger {
            color: #dc3545;
            border-color: #dc3545;
            background-color: rgba(220, 53, 69, 0.1);
        }

            .btn-outline-danger:hover {
                color: #fff;
                background-color: #dc3545;
                border-color: #dc3545;
            }

        .btn-outline-warning {
            color: #fd7e14;
            border-color: #fd7e14;
            background-color: rgba(253, 126, 20, 0.1);
        }

        .btn-outline-info {
            color: #0dcaf0;
            border-color: #0dcaf0;
            background-color: rgba(13, 202, 240, 0.1);
        }

        .table td {
            padding: 12px 8px;
            vertical-align: middle;
        }
    </style>
}