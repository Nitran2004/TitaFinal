@model ProyectoIdentity.Controllers.MenuRecomendacionController.Plato
@{
    ViewBag.Title = "Detalle del Plato";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card mt-4">
                <div class="card-header">
                    <h2>@Model.Nombre</h2>
                    <a href="@Url.Action("Recomendacion", "MenuRecomendacion")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Volver a Recomendaciones
                    </a>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Información General</h5>
                            <table class="table table-borderless">
                                <tr>
                                    <td><strong>Nombre:</strong></td>
                                    <td>@Model.Nombre</td>
                                </tr>
                                <tr>
                                    <td><strong>Precio:</strong></td>
                                    <td class="text-success fw-bold">$@Model.Precio</td>
                                </tr>
                                <tr>
                                    <td><strong>Calorías:</strong></td>
                                    <td>@Model.Calorias cal</td>
                                </tr>
                                <tr>
                                    <td><strong>Categoría:</strong></td>
                                    <td><span class="badge bg-primary">@Model.Categoria</span></td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <h5>Ingredientes</h5>
                            <p class="text-muted">@Model.Ingredientes</p>

                            @if (Model.Similitud.HasValue)
                            {
                                <h5 class="mt-4">Similitud</h5>
                                <p>@((Model.Similitud.Value * 100).ToString("F1"))% de coincidencia</p>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-footer text-center">
                    <div class="d-flex justify-content-between">
                        <a href="@Url.Action("Recomendacion", "MenuRecomendacion")" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left"></i> Seguir Seleccionando
                        </a>
                        <button type="button" class="btn btn-success" onclick="agregarAlPedido(@Model.Id, '@Model.Nombre', @Model.Precio)">
                            <i class="fas fa-cart-plus"></i> Agregar al Pedido
                        </button>
                        <a href="@Url.Action("VerCarrito", "PedidoRecomendacion")" class="btn btn-warning">
                            <i class="fas fa-shopping-cart"></i> Ver Carrito
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        function agregarAlPedido(id, nombre, precio) {
            // Obtener carrito existente del localStorage
            let carrito = JSON.parse(localStorage.getItem('carritoRecomendacion') || '[]');

            console.log("Agregando producto con ID:", id); // Para debug

            // Verificar si el producto ya existe en el carrito
            let productoExistente = carrito.find(item => item.id === id);

            if (productoExistente) {
                productoExistente.cantidad += 1;
                productoExistente.subtotal = productoExistente.cantidad * productoExistente.precio;
            } else {
                carrito.push({
                    id: id,
                    nombre: nombre,
                    precio: precio,
                    cantidad: 1,
                    subtotal: precio
                });
            }

            // Guardar carrito actualizado
            localStorage.setItem('carritoRecomendacion', JSON.stringify(carrito));

            // Mostrar mensaje de confirmación
            alert(`${nombre} agregado al carrito!`);

            // Actualizar contador del carrito si existe
            actualizarContadorCarrito();
        }

        function actualizarContadorCarrito() {
            let carrito = JSON.parse(localStorage.getItem('carritoRecomendacion') || '[]');
            let totalItems = carrito.reduce((total, item) => total + item.cantidad, 0);

            // Actualizar badge del carrito si existe
            const badge = document.querySelector('.carrito-badge');
            if (badge) {
                badge.textContent = totalItems;
                badge.style.display = totalItems > 0 ? 'inline' : 'none';
            }
        }

        // Actualizar contador al cargar la página
        $(document).ready(function () {
            actualizarContadorCarrito();
        });
    </script>
}

<style>
    .btn-warning {
        color: #fff;
        background-color: #F2A900;
        border-color: #F2A900;
    }

        .btn-warning:hover {
            color: #fff;
            background-color: #e09600;
            border-color: #d48e00;
        }

    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .table-borderless td {
        border: none;
        padding: 0.5rem 0;
    }
</style>
}