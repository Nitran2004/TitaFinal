@model ProyectoIdentity.Models.CollectionPoint
@{
    ViewData["Title"] = "Confirmar Punto de Recolección";

    // Valores por defecto para Quito si no hay coordenadas
    if (ViewBag.UserLat == null)
    {
        ViewBag.UserLat = -0.1857;
    }

    if (ViewBag.UserLng == null)
    {
        ViewBag.UserLng = -78.4954;
    }

    if (ViewBag.Distancia == null)
    {
        ViewBag.Distancia = 3.5;
    }

    // Es crucial obtener el ID del punto de recolección
    int puntoRecoleccionId = ViewBag.PuntoRecoleccionId ?? 0;

    // Formatear la distancia para que siempre muestre el punto decimal
    string distanciaFormateada = string.Format("{0:0.00}", ViewBag.Distancia);
}

<div class="container mt-4">
    <!-- Mostrar mensajes de error si existen -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-header bg-success text-white">
            <h2 class="mb-0">Confirma tu punto de recolección</h2>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Detalles del punto de recolección</h5>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@Model.Name</h5>
                            <p class="card-text">
                                <strong>Sucursal:</strong> @Model.Sucursal.Nombre<br />
                                <strong>Dirección:</strong> @Model.Address<br />
                            </p>
                            <p class="card-text">
                                <strong>Distancia:</strong>
                                <span class="@(ViewBag.Distancia < 3 ? "text-success" : (ViewBag.Distancia < 7 ? "text-warning" : "text-danger"))">
                                    @ViewBag.DistanciaFormateada km
                                    @if (ViewBag.Distancia < 3)
                                    {
                                        <i class="fas fa-check-circle"></i>
                                    }
                                </span>
                            </p>
                        </div>
                    </div>

                    <!-- NUEVAS OPCIONES DE SERVICIO -->
                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <h5 class="mb-0"><i class="fas fa-utensils"></i> Opciones de Servicio</h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="form-label fw-bold">
                                    <i class="fas fa-concierge-bell"></i> Tipo de Servicio *
                                </label>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <div class="card service-option" data-service="Servir aquí">
                                            <div class="card-body text-center">
                                                <input class="form-check-input" type="radio" name="tipoServicio" id="servirAquiRecoleccion" value="Servir aquí" required>
                                                <label class="form-check-label w-100" for="servirAquiRecoleccion">
                                                    <i class="fas fa-chair fa-2x d-block mb-2 text-primary"></i>
                                                    <strong>Servir aquí</strong>
                                                    <small class="d-block text-muted">Consumir en el restaurante</small>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <div class="card service-option" data-service="Para llevar">
                                            <div class="card-body text-center">
                                                <input class="form-check-input" type="radio" name="tipoServicio" id="paraLlevarRecoleccion" value="Para llevar" required>
                                                <label class="form-check-label w-100" for="paraLlevarRecoleccion">
                                                    <i class="fas fa-shopping-bag fa-2x d-block mb-2 text-success"></i>
                                                    <strong>Para llevar</strong>
                                                    <small class="d-block text-muted">Recoger en el restaurante</small>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Instrucciones</h5>
                        </div>
                        <div class="card-body">
                            <p>Una vez confirmes tu pedido:</p>
                            <ul>
                                <li>Recibirás una confirmación con el número de tu pedido</li>
                                <li id="instruccionTiempo">Podrás recoger tu pedido en el punto seleccionado en aproximadamente 20-30 minutos</li>
                                <li>Cuando llegues, menciona el número de tu pedido</li>
                            </ul>

                            @if (ViewBag.Distancia > 5)
                            {
                                <div class="alert alert-warning mt-3">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    <strong>Nota:</strong> Te encuentras a más de 5 km de distancia.
                                    Considera el tiempo de viaje para recoger tu pedido.
                                </div>
                            }

                            <!-- Información específica según tipo de servicio -->
                            <div id="infoServirAqui" class="alert alert-info mt-3" style="display: none;">
                                <strong><i class="fas fa-chair"></i> Servir aquí:</strong>
                                <ul class="mb-0 mt-2">
                                    <li>Tu mesa te será asignada cuando llegues</li>
                                    <li>Tiempo estimado de preparación: 15-25 minutos</li>
                                    <li>Puedes esperar en el área de recepción o en cualquiera de nuestras mesas</li>
                                </ul>
                            </div>

                            <div id="infoParaLlevar" class="alert alert-success mt-3" style="display: none;">
                                <strong><i class="fas fa-shopping-bag"></i> Para llevar:</strong>
                                <ul class="mb-0 mt-2">
                                    <li>Tiempo estimado: 15-20 minutos</li>
                                    <li>Recoge en el mostrador</li>
                                    <li>Te avisaremos cuando esté listo</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mt-4 d-flex justify-content-between">
                <a href="@Url.Action("Seleccionar", "Recoleccion")"
                   class="btn btn-outline-secondary navigation-btn"
                   style="color: #6c757d !important; border-color: #6c757d !important; background-color: transparent !important; border-width: 2px !important; display: inline-flex !important; align-items: center !important; padding: 10px 20px !important;">
                    <i class="fas fa-arrow-left" style="margin-right: 8px !important;"></i> Elegir otro punto
                </a>

                <!-- FORMULARIO ORIGINAL - SOLO AGREGANDO VALIDACIÓN -->
                @if (puntoRecoleccionId > 0)
                {
                    <form asp-action="FinalizarPedido" asp-controller="Recoleccion" method="post" id="formFinalizarPedido">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="puntoRecoleccionId" value="@puntoRecoleccionId" />
                        <input type="hidden" name="tipoServicio" id="tipoServicioHidden" value="" />
                        <button type="submit" class="btn btn-success" id="btnFinalizar">
                            <i class="fas fa-check"></i> Confirmar y finalizar pedido
                        </button>
                    </form>
                }
                else
                {
                    <button class="btn btn-secondary" disabled>
                        <i class="fas fa-exclamation-triangle"></i> Error: No se puede finalizar
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
          integrity="sha256-sA+e2Zb65p6RnhOd0qztjH4P7ZYtY62nLk9gCN1lvT8=" crossorigin="" />

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
            integrity="sha256-nPLb6D5CKbqq9cXbY3FdP1q1OxGBs1OgglxIG6QtkWw=" crossorigin=""></script>

    <script>
        // FUNCIÓN ORIGINAL MODIFICADA PARA INCLUIR VALIDACIÓN
        document.getElementById('formFinalizarPedido').addEventListener('submit', function (e) {
            const tipoServicio = document.querySelector('input[name="tipoServicio"]:checked');

            // VALIDAR QUE SE HAYA SELECCIONADO TIPO DE SERVICIO
            if (!tipoServicio) {
                e.preventDefault(); // Prevenir envío del formulario
                alert('Por favor selecciona si deseas servir aquí o para llevar');
                return false;
            }

            // AGREGAR LOS DATOS AL FORMULARIO ANTES DE ENVIAR
            document.getElementById('tipoServicioHidden').value = tipoServicio.value;

            // MANTENER CONFIRMACIÓN ORIGINAL
            return confirm("¿Estás seguro de que deseas confirmar este pedido?");
        });

        // Manejar selección de tipo de servicio
        document.querySelectorAll('input[name="tipoServicio"]').forEach(function (radio) {
            radio.addEventListener('change', function () {
                const tipoSeleccionado = this.value;

                // Actualizar estilos visuales
                document.querySelectorAll('.service-option').forEach(function (option) {
                    option.classList.remove('selected');
                });
                this.closest('.service-option').classList.add('selected');

                // Mostrar información específica
                document.getElementById('infoServirAqui').style.display = 'none';
                document.getElementById('infoParaLlevar').style.display = 'none';

                if (tipoSeleccionado === 'Servir aquí') {
                    document.getElementById('infoServirAqui').style.display = 'block';
                    document.getElementById('instruccionTiempo').textContent = 'Podrás disfrutar tu pedido en el restaurante en aproximadamente 15-25 minutos';
                } else if (tipoSeleccionado === 'Para llevar') {
                    document.getElementById('infoParaLlevar').style.display = 'block';
                    document.getElementById('instruccionTiempo').textContent = 'Podrás recoger tu pedido en el punto seleccionado en aproximadamente 15-20 minutos';
                }
            });
        });

        // Efecto visual para las opciones de servicio
        document.querySelectorAll('.service-option').forEach(function (option) {
            option.addEventListener('click', function () {
                const radio = this.querySelector('input[type="radio"]');
                radio.checked = true;
                radio.dispatchEvent(new Event('change'));
            });
        });

        // CÓDIGO ORIGINAL DEL MAPA
        document.addEventListener("DOMContentLoaded", function () {
            try {
                var userLat = parseFloat('@ViewBag.UserLat');
                var userLng = parseFloat('@ViewBag.UserLng');
                var sucursalLat = parseFloat('@Model.Sucursal.Latitud');
                var sucursalLng = parseFloat('@Model.Sucursal.Longitud');

                if (!isNaN(userLat) && !isNaN(userLng) && !isNaN(sucursalLat) && !isNaN(sucursalLng)) {
                    var map = L.map('mapa').setView([userLat, userLng], 13);

                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        maxZoom: 18,
                        attribution: '© OpenStreetMap contributors'
                    }).addTo(map);

                    var userMarker = L.marker([userLat, userLng]).addTo(map)
                        .bindPopup("Tu ubicación").openPopup();

                    var sucursalMarker = L.marker([sucursalLat, sucursalLng]).addTo(map)
                        .bindPopup("Sucursal: @Model.Sucursal.Nombre");

                    var latlngs = [
                        [userLat, userLng],
                        [sucursalLat, sucursalLng]
                    ];

                    var polyline = L.polyline(latlngs, { color: 'blue' }).addTo(map);
                    map.fitBounds(polyline.getBounds());
                } else {
                    throw new Error("Datos de coordenadas no válidos");
                }
            } catch (error) {
                console.error("Error al cargar el mapa:", error);
                if (document.getElementById("mapError")) {
                    document.getElementById("mapError").style.display = "block";
                }
            }
        });
    </script>
}

@section styles {
    <style>
        .service-option {
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid #dee2e6;
            height: 100%;
        }

            .service-option:hover {
                border-color: #28a745;
                box-shadow: 0 0.25rem 0.5rem rgba(40, 167, 69, 0.25);
                transform: translateY(-2px);
            }

            .service-option.selected {
                border-color: #28a745;
                background-color: #f8fff9;
                box-shadow: 0 0.25rem 0.5rem rgba(40, 167, 69, 0.25);
            }

            .service-option .form-check-input {
                position: absolute;
                top: 10px;
                right: 10px;
            }

            .service-option label {
                cursor: pointer;
                margin: 0;
                padding: 1rem 0;
            }

        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        .alert-success {
            background-color: #d4edda;
            border-color: #c3e6cb;
            color: #155724;
        }

        .alert-warning {
            background-color: #fff3cd;
            border-color: #ffeaa7;
            color: #856404;
        }

        .alert-info {
            background-color: #e7f3ff;
            border-color: #b8daff;
            color: #0c5460;
        }

        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
        }

            .btn-success:hover {
                background-color: #218838;
                border-color: #1e7e34;
            }

        .text-danger {
            color: #dc3545 !important;
        }
    </style>
}