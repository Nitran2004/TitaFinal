@model ProyectoIdentity.Models.CollectionPoint
@{
    ViewData["Title"] = "Confirmar Punto de Recolección";

    // Valores por defecto para Quito si no hay coordenadas
    if (ViewBag.UserLat == null)
    {
        ViewBag.UserLat = -0.1857;
    }

    if (ViewBag.UserLng == null)
    {
        ViewBag.UserLng = -78.4954;
    }

    if (ViewBag.Distancia == null)
    {
        ViewBag.Distancia = 3.5;
    }

    // Es crucial obtener el ID del punto de recolección
    int puntoRecoleccionId = ViewBag.PuntoRecoleccionId ?? 0;

    // Formatear la distancia para que siempre muestre el punto decimal
    string distanciaFormateada = string.Format("{0:0.00}", ViewBag.Distancia);
}
<div class="container mt-4">
    <!-- Mostrar mensajes de error si existen -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @* IDPedido IDPuntos *@
    @* <p>Pedido ID: @ViewBag.PedidoId</p> *@
    @* <p>Punto ID: @ViewBag.PuntoRecoleccionId</p> *@

    <div class="card">
        <div class="card-header bg-success text-white">
            <h2 class="mb-0">Confirma tu punto de recolección</h2>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Detalles del punto de recolección</h5>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@Model.Name</h5>
                            <p class="card-text">
                                <strong>Sucursal:</strong> @Model.Sucursal.Nombre<br />
                                <strong>Dirección:</strong> @Model.Address<br />
                                @* <strong>Descripción:</strong> @Model.Descripcion *@
                            </p>
                            <p class="card-text">
                                <strong>Distancia:</strong>
                                <span class="@(ViewBag.Distancia < 3 ? "text-success" : (ViewBag.Distancia < 7 ? "text-warning" : "text-danger"))">
                                    @ViewBag.DistanciaFormateada km
                                    @if (ViewBag.Distancia < 3)
                                    {
                                        <i class="fas fa-check-circle"></i>
                                    }
                                </span>
                            </p>
                            @* <div class="small text-muted">
                            <p>ID Punto: @puntoRecoleccionId</p>
                            <p id="coordsInfo">Coordenadas calculadas: Usuario (@ViewBag.UserLat, @ViewBag.UserLng), Sucursal (@Model.Sucursal.Latitud, @Model.Sucursal.Longitud)</p>
                            </div> *@
                        </div>
                    </div>

                    @* MAPA
                    <div class="card mb-4">
                    <div class="card-header bg-light">
                    <h5 class="mb-0">Mapa</h5>
                    </div>
                    <div class="card-body">
                    <div id="mapa" style="height: 300px; width: 100%;"></div>
                    <div id="mapError" class="alert alert-danger mt-2" style="display: none;">
                    Error al cargar el mapa. Verifique su conexión a internet.
                    </div>
                    </div>
                    </div> *@
                </div>

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Instrucciones</h5>
                        </div>
                        <div class="card-body">
                            <p>Una vez confirmes tu pedido:</p>
                            <ul>
                                <li>Recibirás una confirmación con el número de tu pedido</li>
                                <li>Podrás recoger tu pedido en el punto seleccionado en aproximadamente 20-30 minutos</li>
                                <li>Cuando llegues, menciona el número de tu pedido</li>
                            </ul>

                            @if (ViewBag.Distancia > 5)
                            {
                                <div class="alert alert-warning mt-3">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    <strong>Nota:</strong> Te encuentras a más de 5 km de distancia.
                                    Considera el tiempo de viaje para recoger tu pedido.
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="mt-4 d-flex justify-content-between">
                <a href="@Url.Action("Seleccionar", "Recoleccion")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left"></i> Elegir otro punto
                </a>

                <!-- Formulario para finalizar el pedido -->
                @if (puntoRecoleccionId > 0)
                {
                    <form asp-action="FinalizarPedido" asp-controller="Recoleccion" method="post" onsubmit="return confirmarFinalizacion();">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="puntoRecoleccionId" value="@puntoRecoleccionId" />
                        <button type="submit" class="btn btn-success" id="btnFinalizar">
                            <i class="fas fa-check"></i> Confirmar y finalizar pedido
                        </button>
                    </form>
                }
                else
                {
                    <button class="btn btn-secondary" disabled>
                        <i class="fas fa-exclamation-triangle"></i> Error: No se puede finalizar
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
          integrity="sha256-sA+e2Zb65p6RnhOd0qztjH4P7ZYtY62nLk9gCN1lvT8=" crossorigin="" />

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
            integrity="sha256-nPLb6D5CKbqq9cXbY3FdP1q1OxGBs1OgglxIG6QtkWw=" crossorigin=""></script>

    <script>
        function confirmarFinalizacion() {
            return confirm("¿Estás seguro de que deseas confirmar este pedido?");
        }

        document.addEventListener("DOMContentLoaded", function () {
            try {
                var userLat = parseFloat('@ViewBag.UserLat');
                var userLng = parseFloat('@ViewBag.UserLng');
                var sucursalLat = parseFloat('@Model.Sucursal.Latitud');
                var sucursalLng = parseFloat('@Model.Sucursal.Longitud');

                if (!isNaN(userLat) && !isNaN(userLng) && !isNaN(sucursalLat) && !isNaN(sucursalLng)) {
                    var map = L.map('mapa').setView([userLat, userLng], 13);

                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        maxZoom: 18,
                        attribution: '© OpenStreetMap contributors'
                    }).addTo(map);

                    var userMarker = L.marker([userLat, userLng]).addTo(map)
                        .bindPopup("Tu ubicación").openPopup();

                    var sucursalMarker = L.marker([sucursalLat, sucursalLng]).addTo(map)
                        .bindPopup("Sucursal: @Model.Sucursal.Nombre");

                    var latlngs = [
                        [userLat, userLng],
                        [sucursalLat, sucursalLng]
                    ];

                    var polyline = L.polyline(latlngs, { color: 'blue' }).addTo(map);
                    map.fitBounds(polyline.getBounds());
                } else {
                    throw new Error("Datos de coordenadas no válidos");
                }
            } catch (error) {
                console.error("Error al cargar el mapa:", error);
                document.getElementById("mapError").style.display = "block";
            }
        });
    </script>
}
