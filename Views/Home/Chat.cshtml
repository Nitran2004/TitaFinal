@{
    ViewData["Title"] = "Chat de Recomendaciones";
}

<style>
    .chat-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .chat-header {
        text-align: center;
        margin-bottom: 30px;
        padding: 20px;
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
    }

    .chat-header h1 {
        margin: 0 0 10px 0;
        font-size: 2rem;
        font-weight: 600;
    }

    .chat-header p {
        margin: 0;
        font-size: 1.1rem;
        opacity: 0.9;
    }

    .chat-box {
        height: 400px;
        border: 2px solid #e9ecef;
        border-radius: 15px;
        overflow-y: auto;
        padding: 20px;
        background-color: #f8f9fa;
        margin-bottom: 20px;
        box-shadow: inset 0 2px 10px rgba(0,0,0,0.05);
    }

    .message {
        margin-bottom: 15px;
        animation: fadeIn 0.5s ease-in;
    }

    .user-message {
        text-align: right;
    }

    .bot-message {
        text-align: left;
    }

    .message-content {
        display: inline-block;
        padding: 12px 18px;
        border-radius: 20px;
        max-width: 70%;
        word-wrap: break-word;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .user-message .message-content {
        background: linear-gradient(135deg, #007bff, #0056b3);
        color: white;
    }

    .bot-message .message-content {
        background: white;
        border: 1px solid #dee2e6;
        color: #333;
    }

    .product-recommendation {
        margin-top: 10px;
        padding: 15px;
        background: linear-gradient(135deg, #fff3cd, #ffeaa7);
        border-left: 4px solid #ffc107;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(255, 193, 7, 0.2);
    }

    .product-name {
        font-weight: 600;
        color: #856404;
        font-size: 1.1rem;
        margin-bottom: 5px;
    }

    .product-details {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .product-price {
        font-weight: 600;
        color: #28a745;
        font-size: 1.1rem;
    }

    .input-group {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

    .message-input {
        flex: 1;
        padding: 12px 18px;
        border: 2px solid #dee2e6;
        border-radius: 25px;
        font-size: 1rem;
        outline: none;
        transition: border-color 0.3s ease;
    }

    .message-input:focus {
        border-color: #28a745;
        box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
    }

    .send-button {
        padding: 12px 24px;
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(40, 167, 69, 0.3);
    }

    .send-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(40, 167, 69, 0.4);
    }

    .send-button:disabled {
        background: #6c757d;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }

    .suggestions {
        margin-bottom: 20px;
    }

    .suggestions h4 {
        color: #495057;
        margin-bottom: 15px;
        font-size: 1.1rem;
    }

    .suggestion-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .suggestion-btn {
        padding: 8px 16px;
        background: white;
        border: 2px solid #28a745;
        color: #28a745;
        border-radius: 20px;
        cursor: pointer;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .suggestion-btn:hover {
        background: #28a745;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(40, 167, 69, 0.3);
        text-decoration: none;
    }

    .loading {
        display: none;
        text-align: center;
        color: #6c757d;
        font-style: italic;
        margin: 10px 0;
    }

    .loading.show {
        display: block;
    }

    .status-indicator {
        text-align: center;
        margin-bottom: 20px;
        padding: 10px;
        border-radius: 8px;
        font-size: 0.9rem;
    }

    .status-success {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .status-error {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    @@media (max-width: 768px) {
        .chat-container {
            padding: 10px;
        }
        
        .message-content {
            max-width: 85%;
        }
        
        .input-group {
            flex-direction: column;
        }
        
        .suggestion-buttons {
            justify-content: center;
        }
    }
</style>

<div class="chat-container">
    <div class="chat-header">
        <h1><i class="fas fa-comments"></i> Chat de Recomendaciones</h1>
        <p>¡Pregúntame qué te gustaría comer o beber hoy!</p>
    </div>

    <div id="status" class="status-indicator" style="display: none;"></div>

    <div class="suggestions">
        <h4><i class="fas fa-lightbulb"></i> Sugerencias rápidas:</h4>
        <div class="suggestion-buttons">
            <button class="suggestion-btn" onclick="enviarSugerencia('¿Qué me recomiendan para almorzar?')">
                🍽️ Para almorzar
            </button>
            <button class="suggestion-btn" onclick="enviarSugerencia('Quiero algo sin gluten')">
                🌾 Sin gluten
            </button>
            <button class="suggestion-btn" onclick="enviarSugerencia('¿Cuál es su especialidad?')">
                ⭐ Especialidad
            </button>
            <button class="suggestion-btn" onclick="enviarSugerencia('Algo para compartir')">
                👥 Para compartir
            </button>
            <button class="suggestion-btn" onclick="enviarSugerencia('Una cerveza refrescante')">
                🍺 Cerveza
            </button>
            <button class="suggestion-btn" onclick="enviarSugerencia('Un cóctel especial')">
                🍹 Cóctel
            </button>
        </div>
    </div>

    <div id="chatBox" class="chat-box">
        <div class="message bot-message">
            <div class="message-content">
                ¡Hola! 👋 Soy tu asistente de recomendaciones. Puedes preguntarme sobre nuestros productos, especialidades, opciones sin gluten, o cualquier preferencia que tengas. ¿En qué puedo ayudarte hoy?
            </div>
        </div>
    </div>

    <div class="loading" id="loading">
        <i class="fas fa-spinner fa-spin"></i> Pensando en la mejor recomendación para ti...
    </div>

    <div class="input-group">
        <input type="text" id="messageInput" class="message-input" placeholder="Escribe tu pregunta aquí..." onkeypress="handleKeyPress(event)">
        <button id="sendButton" class="send-button" onclick="enviarMensaje()">
            <i class="fas fa-paper-plane"></i> Enviar
        </button>
    </div>

    <div class="text-center mt-3">
        <small class="text-muted">
            <i class="fas fa-info-circle"></i> 
            Este chat usa inteligencia artificial para ayudarte a encontrar el producto perfecto
        </small>
    </div>
</div>

<script>
    let isProcessing = false;

    document.addEventListener('DOMContentLoaded', function() {
        verificarSistema();
        document.getElementById('messageInput').focus();
    });

    function verificarSistema() {
        fetch('/api/chat/verificar')
            .then(response => response.json())
            .then(data => {
                const statusDiv = document.getElementById('status');
                if (data.estado === 'activo') {
                    statusDiv.className = 'status-indicator status-success';
                    statusDiv.innerHTML = `<i class="fas fa-check-circle"></i> ${data.mensaje}`;
                    statusDiv.style.display = 'block';
                    setTimeout(() => statusDiv.style.display = 'none', 3000);
                } else {
                    statusDiv.className = 'status-indicator status-error';
                    statusDiv.innerHTML = `<i class="fas fa-exclamation-circle"></i> ${data.mensaje}`;
                    statusDiv.style.display = 'block';
                }
            })
            .catch(error => {
                console.error('Error verificando sistema:', error);
                const statusDiv = document.getElementById('status');
                statusDiv.className = 'status-indicator status-error';
                statusDiv.innerHTML = '<i class="fas fa-exclamation-triangle"></i> Error conectando con el sistema';
                statusDiv.style.display = 'block';
            });
    }

    function handleKeyPress(event) {
        if (event.key === 'Enter' && !isProcessing) {
            enviarMensaje();
        }
    }

    function enviarSugerencia(mensaje) {
        document.getElementById('messageInput').value = mensaje;
        enviarMensaje();
    }

    function enviarMensaje() {
        if (isProcessing) return;

        const input = document.getElementById('messageInput');
        const mensaje = input.value.trim();

        if (!mensaje) {
            input.focus();
            return;
        }

        isProcessing = true;
        const sendButton = document.getElementById('sendButton');
        const loading = document.getElementById('loading');

        // Deshabilitar interfaz
        input.disabled = true;
        sendButton.disabled = true;
        sendButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Enviando...';
        loading.classList.add('show');

        // Mostrar mensaje del usuario
        agregarMensaje(mensaje, 'user');
        input.value = '';

        // Enviar a la API
        fetch('/api/chat/mensaje', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ mensaje: mensaje })
        })
        .then(response => response.json())
        .then(data => {
            loading.classList.remove('show');
            
            if (data.respuesta) {
                agregarRespuestaBot(data);
            } else {
                agregarMensaje('Lo siento, hubo un problema procesando tu mensaje. Por favor, intenta de nuevo.', 'bot');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            loading.classList.remove('show');
            agregarMensaje('Lo siento, no pude procesar tu mensaje en este momento. Por favor, intenta más tarde.', 'bot');
        })
        .finally(() => {
            // Rehabilitar interfaz
            isProcessing = false;
            input.disabled = false;
            sendButton.disabled = false;
            sendButton.innerHTML = '<i class="fas fa-paper-plane"></i> Enviar';
            input.focus();
        });
    }

    function agregarMensaje(contenido, tipo) {
        const chatBox = document.getElementById('chatBox');
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${tipo}-message`;

        const contentDiv = document.createElement('div');
        contentDiv.className = 'message-content';
        contentDiv.textContent = contenido;

        messageDiv.appendChild(contentDiv);
        chatBox.appendChild(messageDiv);
        chatBox.scrollTop = chatBox.scrollHeight;
    }

    function agregarRespuestaBot(data) {
        const chatBox = document.getElementById('chatBox');
        const messageDiv = document.createElement('div');
        messageDiv.className = 'message bot-message';

        const contentDiv = document.createElement('div');
        contentDiv.className = 'message-content';
        contentDiv.textContent = data.respuesta;

        messageDiv.appendChild(contentDiv);

        // Si hay una recomendación específica de producto
        if (data.productoId && data.productoId > 0) {
            const productDiv = document.createElement('div');
            productDiv.className = 'product-recommendation';

            let productHtml = `
                <div class="product-name">
                    <i class="fas fa-star"></i> ${data.nombreProducto}
                </div>
                <div class="product-details">
                    <strong>Categoría:</strong> ${data.categoria}<br>
                    <strong>Precio:</strong> <span class="product-price">${data.precio}</span>
            `;

            if (data.descripcion) {
                productHtml += `<br><strong>Descripción:</strong> ${data.descripcion}`;
            }

            if (data.alergenos && data.alergenos !== 'NULL') {
                productHtml += `<br><strong>Alérgenos:</strong> ${data.alergenos}`;
            }

            if (data.cantidad) {
                productHtml += `<br><strong>Disponible:</strong> ${data.cantidad} unidades`;
            }

            productHtml += '</div>';
            productDiv.innerHTML = productHtml;
            messageDiv.appendChild(productDiv);
        }

        chatBox.appendChild(messageDiv);
        chatBox.scrollTop = chatBox.scrollHeight;
    }

    // Funcionalidad adicional para mejorar la experiencia
    function limpiarChat() {
        const chatBox = document.getElementById('chatBox');
        chatBox.innerHTML = `
            <div class="message bot-message">
                <div class="message-content">
                    ¡Hola! 👋 Soy tu asistente de recomendaciones. Puedes preguntarme sobre nuestros productos, especialidades, opciones sin gluten, o cualquier preferencia que tengas. ¿En qué puedo ayudarte hoy?
                </div>
            </div>
        `;
    }

    // Auto-resize del input cuando el usuario escribe mucho
    document.getElementById('messageInput').addEventListener('input', function() {
        this.style.height = 'auto';
        this.style.height = Math.min(this.scrollHeight, 120) + 'px';
    });

    // Notificaciones de sonido (opcional)
    function reproducirSonido() {
        try {
            const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmMcBTqR1fPSfCoEIHLA7+GQRQ0PVqzn8KRYGAg+l9z1unEcBDuL0fXaeSsFH2u+8OESR');
            audio.play();
        } catch (e) {
            // Silenciar errores de audio
        }
    }
</script>