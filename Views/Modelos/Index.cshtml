@model IEnumerable<ProyectoIdentity.Models.Modelo>

@{
    ViewData["Title"] = "Lista de Modelos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center">Lista de Modelos</h1>

@if (User.IsInRole("Administrador"))
{
    <div class="row">
        <div class="col-sm-3 offset-9">
            <a asp-action="Create" class="btn btn-primary w-100">Crear Nuevo Modelo</a>
        </div>
    </div>
}

<table class="table" id="tablaModelos">
    <thead>
        <tr>
            <th>Core</th>
            <th>Alineamiento</th>
            @* <th>Alineamiento 2</th> *@
            @if (User.IsInRole("Administrador"))
            {
                <th>Acciones</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-dominio="@item.Alineamiento2">
                <td>@Html.DisplayFor(modelItem => item.Core)</td>
                <td>@Html.DisplayFor(modelItem => item.Alineamiento2)</td>
                @if (User.IsInRole("Administrador"))
                {
                    <td>
                        <button type="button" class="btn btn-warning" onclick="toggleMarkRow('@item.Alineamiento2')">Marcar/Desmarcar</button>
                        <a asp-action="Edit" asp-route-id="@item.ModeloID" class="btn btn-warning">Editar</a>
                        <button type="button" class="btn btn-danger" onclick="confirmDelete('@item.ModeloID', '@item.Core')">Borrar</button>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script type="text/javascript">
        function confirmDelete(id, core) {
            if (confirm('¿Está seguro que desea borrar el modelo con core ' + core + '?')) {
                fetch('/Modelos/Delete/' + id, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    }
                })
                    .then(response => {
                        if (response.ok) {
                            location.reload();
                        } else {
                            alert('Error al borrar el modelo.');
                        }
                    });
            }
        }

        function toggleMarkRow(dominio) {
            let markedDominios = JSON.parse(localStorage.getItem('markedDominios')) || [];
            if (markedDominios.includes(dominio)) {
                markedDominios = markedDominios.filter(d => d !== dominio);
            } else {
                markedDominios.push(dominio);
            }
            localStorage.setItem('markedDominios', JSON.stringify(markedDominios));
            highlightRows();
        }

        function highlightRows() {
            const markedDominios = JSON.parse(localStorage.getItem('markedDominios')) || [];
            document.querySelectorAll('tr[data-dominio]').forEach(row => {
                const dominio = row.getAttribute('data-dominio');
                if (markedDominios.includes(dominio)) {
                    row.style.backgroundColor = 'lightgreen';
                    row.style.fontWeight = 'bold';
                } else {
                    row.style.backgroundColor = '';
                    row.style.fontWeight = '';
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            highlightRows();
            synchronizeWithAlineamientos();
        });

        function synchronizeWithAlineamientos() {
            const syncData = JSON.parse(localStorage.getItem('syncModelos')) || {};
            if (syncData.dominio) {
                toggleMarkRow(syncData.dominio);
                localStorage.removeItem('syncModelos');
            }
        }
    </script>
}
