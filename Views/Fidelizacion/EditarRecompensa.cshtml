@model ProyectoIdentity.Models.EditarRecompensaViewModel
@{
    ViewData["Title"] = "Editar Recompensa";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">

            <!-- Header -->
            <div class="card border-0 shadow mb-4" style="border-radius: 15px;">
                <div class="card-header text-center py-4" style="background: linear-gradient(135deg, #ffc107, #fd7e14); color: white; border-radius: 15px 15px 0 0;">
                    <h2 class="mb-1">
                        <i class="fas fa-edit me-3"></i>
                        Editar Recompensa
                    </h2>
                    <p class="mb-0 opacity-75">Modificar configuración de la recompensa</p>
                </div>
            </div>

            <!-- Botón volver -->
            <div class="mb-3">
                <a href="@Url.Action("AdminRecompensas")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Volver a Gestión de Recompensas
                </a>
            </div>

            <!-- Formulario -->
            <div class="card border-0 shadow">
                <div class="card-body p-4">

                    <!-- Vista previa actual -->
                    <div class="alert alert-light border mb-4">
                        <h6><i class="fas fa-eye me-2"></i>Recompensa Actual</h6>
                        <div class="row align-items-center">
                            <div class="col-md-2">
                                @if (Model.ImagenExistente != null && Model.ImagenExistente.Length > 0)
                                {
                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.ImagenExistente)"
                                         alt="@Model.Nombre"
                                         class="rounded"
                                         style="width: 60px; height: 60px; object-fit: cover;" />
                                }
                                else
                                {
                                    <div class="placeholder-image rounded d-flex align-items-center justify-content-center"
                                         style="width: 60px; height: 60px; background: #f8f9fa;">
                                        <i class="fas fa-utensils text-muted"></i>
                                    </div>
                                }
                            </div>
                            <div class="col-md-10">
                                <h5 class="mb-1">@Model.Nombre</h5>
                                <p class="mb-1">
                                    <span class="badge bg-secondary me-2">@Model.Categoria</span>
                                    <span class="badge bg-success me-2">$@Model.PrecioOriginal.ToString("F2")</span>
                                    <span class="badge bg-primary">@Model.PuntosNecesarios pts</span>
                                </p>
                                @{
                                    var ratioActual = Model.PrecioOriginal > 0 ? Model.PuntosNecesarios / Model.PrecioOriginal : 0;
                                }
                                <small class="text-muted">
                                    Ratio actual: <span class="badge @(ratioActual > 200 ? "bg-danger" : ratioActual > 150 ? "bg-warning text-dark" : "bg-success")">
                                        @ratioActual.ToString("F0") pts/$
                                    </span>
                                </small>
                            </div>
                        </div>
                    </div>

                    <form asp-action="EditarRecompensa" method="post" id="formEditarRecompensa">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="Id" />

                        <!-- Selección de Producto -->
                        <div class="mb-4">
                            <label for="ProductoId" class="form-label fw-bold">
                                <i class="fas fa-box text-primary me-2"></i>Producto Base
                            </label>
                            <select asp-for="ProductoId" class="form-select" id="ProductoId" onchange="cargarDatosProducto()">
                                <option value="">-- Sin producto asociado --</option>
                                @foreach (var grupo in Model.ProductosDisponibles.GroupBy(p => p.Categoria).OrderBy(g => g.Key))
                                {
                                    <optgroup label="@grupo.Key">
                                        @foreach (var producto in grupo.OrderBy(p => p.Nombre))
                                        {
                                            <option value="@producto.Id"
                                                    data-nombre="@producto.Nombre"
                                                    data-precio="@producto.Precio"
                                                    data-categoria="@producto.Categoria"
                                                    selected="@(producto.Id == Model.ProductoId)">
                                                @producto.Nombre - $@producto.Precio.ToString("F2")
                                            </option>
                                        }
                                    </optgroup>
                                }
                            </select>
                            <div class="form-text">
                                Cambiar el producto asociado actualizará automáticamente la imagen
                            </div>
                        </div>

                        <!-- Vista previa del nuevo producto seleccionado -->
                        <div id="preview-producto" class="alert alert-info" style="display: none;">
                            <h6><i class="fas fa-sync-alt me-2"></i>Nuevo Producto Seleccionado</h6>
                            <div class="row">
                                <div class="col-md-8">
                                    <p class="mb-1"><strong>Nombre:</strong> <span id="preview-nombre"></span></p>
                                    <p class="mb-1"><strong>Categoría:</strong> <span id="preview-categoria"></span></p>
                                    <p class="mb-1"><strong>Precio:</strong> $<span id="preview-precio"></span></p>
                                    <p class="mb-0"><strong>Puntos Sugeridos:</strong> <span id="preview-puntos-sugeridos"></span> pts</p>
                                </div>
                                <div class="col-md-4 text-end">
                                    <button type="button" class="btn btn-outline-primary btn-sm" onclick="autoCompletar()">
                                        <i class="fas fa-magic me-1"></i>Auto-completar
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Nombre de la Recompensa -->
                            <div class="col-md-6 mb-3">
                                <label for="Nombre" class="form-label fw-bold">
                                    <i class="fas fa-tag text-success me-2"></i>Nombre de la Recompensa *
                                </label>
                                <input asp-for="Nombre" class="form-control" placeholder="Ej: Pizza Pepperoni" required />
                                <div class="form-text">
                                    Nombre que aparecerá en el programa de recompensas
                                </div>
                            </div>

                            <!-- Categoría -->
                            <div class="col-md-6 mb-3">
                                <label for="Categoria" class="form-label fw-bold">
                                    <i class="fas fa-folder text-warning me-2"></i>Categoría *
                                </label>
                                <input asp-for="Categoria" class="form-control" placeholder="Ej: Pizza" required />
                                <div class="form-text">
                                    Categoría para agrupar recompensas
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Precio Original -->
                            <div class="col-md-6 mb-3">
                                <label for="PrecioOriginal" class="form-label fw-bold">
                                    <i class="fas fa-dollar-sign text-success me-2"></i>Precio Original *
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input asp-for="PrecioOriginal" type="number" step="0.01" min="0" class="form-control" placeholder="8.00" required />
                                </div>
                                <div class="form-text">
                                    Valor monetario del producto
                                </div>
                            </div>

                            <!-- Puntos Necesarios -->
                            <div class="col-md-6 mb-3">
                                <label for="PuntosNecesarios" class="form-label fw-bold">
                                    <i class="fas fa-star text-primary me-2"></i>Puntos Necesarios *
                                </label>
                                <div class="input-group">
                                    <input asp-for="PuntosNecesarios" type="number" min="1" class="form-control" placeholder="1200" required onchange="calcularRatio()" />
                                    <span class="input-group-text">pts</span>
                                </div>
                                <div class="form-text">
                                    Puntos que debe tener el cliente para canjear
                                </div>
                            </div>
                        </div>

                        <!-- Comparación de Cambios -->
                        <div class="alert alert-light border">
                            <h6><i class="fas fa-balance-scale me-2"></i>Comparación de Cambios Antiguos</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <h6 class="text-muted">Valores Actuales</h6>
                                    <p class="mb-1">
                                        <strong>Precio:</strong> $@Model.PrecioOriginal.ToString("F2")
                                    </p>
                                    <p class="mb-1">
                                        <strong>Puntos:</strong> @Model.PuntosNecesarios pts
                                    </p>                                 
                                </div>                         
                            </div>


                        </div>

                        <!-- Información sobre impacto -->
                        <div class="alert alert-warning">
                            <h6><i class="fas fa-exclamation-triangle me-2"></i>Importante</h6>
                            <ul class="mb-0">
                                <li>Los cambios se aplicarán inmediatamente en el programa de recompensas</li>
                                <li>Los canjes ya realizados no se verán afectados</li>
                                <li>Cambiar el producto asociado actualizará automáticamente la imagen</li>
                            </ul>
                        </div>

                        <!-- Botones -->
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="@Url.Action("AdminRecompensas")" class="btn btn-outline-secondary me-md-2">
                                <i class="fas fa-times me-2"></i>Cancelar
                            </a>
                            <button type="submit" class="btn btn-warning">
                                <i class="fas fa-save me-2"></i>Guardar Cambios
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        transition: transform 0.2s ease;
    }

    .form-label {
        color: #495057;
    }

    .form-control:focus {
        border-color: #ffc107;
        box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25);
    }

    .form-select:focus {
        border-color: #ffc107;
        box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25);
    }

    .input-group-text {
        background-color: #f8f9fa;
        border-color: #ced4da;
    }

    .placeholder-image {
        border: 2px dashed #dee2e6;
    }

    @@media (max-width: 768px) {
        .container {
            padding: 0 15px;
        }

        .card-body {
            padding: 1.5rem !important;
        }
    }
</style>

<script>
    // Almacenar valores originales para comparación
    const valoresOriginales = {
        precio: @Model.PrecioOriginal,
        puntos: @Model.PuntosNecesarios
        };

    function cargarDatosProducto() {
        const select = document.getElementById('ProductoId');
        const selectedOption = select.options[select.selectedIndex];

        if (selectedOption.value) {
            const nombre = selectedOption.dataset.nombre;
            const precio = parseFloat(selecteformEditarRecompensadOption.dataset.precio);
            const categoria = selectedOption.dataset.categoria;
            const puntosRecomendados = Math.round(precio * 150); // 150 puntos por dólar

            // Mostrar vista previa
            document.getElementById('preview-producto').style.display = 'block';
            document.getElementById('preview-nombre').textContent = nombre;
            document.getElementById('preview-precio').textContent = precio.toFixed(2);
            document.getElementById('preview-categoria').textContent = categoria;
            document.getElementById('preview-puntos-sugeridos').textContent = puntosRecomendados;

            // Almacenar valores para auto-completar
            window.productoSeleccionado = {
                nombre: nombre,
                precio: precio,
                categoria: categoria,
                puntosRecomendados: puntosRecomendados
            };
        } else {
            document.getElementById('preview-producto').style.display = 'none';
            window.productoSeleccionado = null;
        }
    }

    function autoCompletar() {
        if (window.productoSeleccionado) {
            document.querySelector('input[name="Nombre"]').value = window.productoSeleccionado.nombre;
            document.querySelector('input[name="Categoria"]').value = window.productoSeleccionado.categoria;
            document.querySelector('input[name="PrecioOriginal"]').value = window.productoSeleccionado.precio.toFixed(2);
            document.querySelector('input[name="PuntosNecesarios"]').value = window.productoSeleccionado.puntosRecomendados;
            actualizarComparacion();
        }
    }

    function calcularRatio() {
        const precio = parseFloat(document.querySelector('input[name="PrecioOriginal"]').value) || 0;
        const puntos = parseInt(document.querySelector('input[name="PuntosNecesarios"]').value) || 0;

        if (precio > 0) {
            const ratio = Math.round(puntos / precio);
            const ratioElement = document.getElementById('nuevo-ratio');
            ratioElement.textContent = ratio + ' pts/;

            // Cambiar color según el ratio
            ratioElement.className = 'badge ';
            if (ratio <= 150) {
                ratioElement.className += 'bg-success';
            } else if (ratio <= 200) {
                ratioElement.className += 'bg-warning text-dark';
            } else {
                ratioElement.className += 'bg-danger';
            }
        } else {
            document.getElementById('nuevo-ratio').textContent = '0 pts/;
            document.getElementById('nuevo-ratio').className = 'badge bg-secondary';
        }
    }

    function actualizarComparacion() {
        const precio = parseFloat(document.querySelector('input[name="PrecioOriginal"]').value) || 0;
        const puntos = parseInt(document.querySelector('input[name="PuntosNecesarios"]').value) || 0;

        document.getElementById('nuevo-precio').textContent = precio.toFixed(2);
        document.getElementById('nuevos-puntos').textContent = puntos;

        calcularRatio();
    }

    function aplicarRatioRecomendado() {
        const precio = parseFloat(document.querySelector('input[name="PrecioOriginal"]').value) || 0;
        if (precio > 0) {
            const puntosRecomendados = Math.round(precio * 150); // 150 pts/$
            document.querySelector('input[name="PuntosNecesarios"]').value = puntosRecomendados;
            actualizarComparacion();
        } else {
            alert('Primero ingresa el precio original');
        }
    }

    // Event listeners
    document.addEventListener('DOMContentLoaded', function () {
        // Actualizar comparación cuando cambien los valores
        document.querySelector('input[name="PrecioOriginal"]').addEventListener('input', actualizarComparacion);
        document.querySelector('input[name="PuntosNecesarios"]').addEventListener('input', actualizarComparacion);

        // Inicializar comparación
        actualizarComparacion();

        // Validación del formulario
        document.getElementById('formEditarRecompensa').addEventListener('submit', function (e) {
            // NORMALIZAR Y VALIDAR PRECIO ANTES DE ENVIAR
            const precioInput = document.querySelector('input[name="PrecioOriginal"]');
            if (precioInput.value) {
                let valor = precioInput.value;

                // VALIDAR QUE USE PUNTO COMO DECIMAL
                if (valor.includes(',')) {
                    alert('⚠️ Por favor usa punto (.) como separador decimal, no coma (,)\n\nEjemplo: 2.50 en lugar de 2,50');
                    e.preventDefault();
                    return;
                }

                precioInput.value = valor;
            }

            const precio = parseFloat(document.querySelector('input[name="PrecioOriginal"]').value) || 0;
            const puntos = parseInt(document.querySelector('input[name="PuntosNecesarios"]').value) || 0;

            if (precio <= 0) {
                e.preventDefault();
                alert('El precio original debe ser mayor a 0');
                return;
            }

            if (puntos <= 0) {
                e.preventDefault();
                alert('Los puntos necesarios deben ser mayor a 0');
                return;
            }

            const ratio = puntos / precio;
            if (ratio > 300) {
                if (!confirm(`El ratio de ${Math.round(ratio)} pts/$ es muy alto. ¿Estás seguro de continuar?`)) {
                    e.preventDefault();
                    return;
                }
            }

            // Confirmar cambios si son significativos
            const cambioRatio = Math.abs(ratio - (valoresOriginales.puntos / valoresOriginales.precio));
            if (cambioRatio > 50) {
                if (!confirm('Los cambios son significativos. ¿Estás seguro de aplicarlos?')) {
                    e.preventDefault();
                    return;
                }
            }
        });
    });
</script>
